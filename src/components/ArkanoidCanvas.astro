<canvas class="shadow-secundary"></canvas>
<img id="sprite" src="./arkanoid/sprite.png" alt="" hidden>

<style>
  canvas {
    display: block;
    background: url('./arkanoid/background.png') repeat;
    margin: 0 auto;
    border: solid;
    border-color: white;
    border-width: 2px 2px 0px 2px;
  }
</style>

<script is:inline>
  // VARIABLES
  const CANVAS_WIDTH = 448
  const CANVAS_HEIGHT = 400
  const PADDLE_WIDTH = 50
  const PADDLE_HEIGHT = 10
  const BRICK_WIDTH = 30
  const BRICK_HEIGHT = 10
  const BRICK_PADDING = 4
  const BRICK_MARGIN_TOP = 80
  const BRICK_MARGIN_LEFT = 30
  const BRICK_COL = 12
  const BRICK_ROW = 6

  const bricks = []

  for (let i = 0; i < BRICK_COL; i++) {
    bricks[i] = []
    for (let j = 0; j < BRICK_ROW; j++) {
      const brickX = i * (BRICK_WIDTH + BRICK_PADDING) + BRICK_MARGIN_LEFT
      const brickY = j * (BRICK_HEIGHT + BRICK_PADDING) + BRICK_MARGIN_TOP

      bricks[i][j] = {x: brickX, y: brickY, break: false, color: randomColor()}
    }
  }

  let moveRight = false
  let moveLeft = false

  const sprite = document.getElementById("sprite")
  const canvas = document.querySelector("canvas")
  const ctx = canvas.getContext("2d")

  canvas.height = CANVAS_HEIGHT
  canvas.width = CANVAS_WIDTH

  const ball = {
    x: CANVAS_WIDTH / 2,
    y: CANVAS_HEIGHT / 2 ,
    r: 5,
    dx: 3,
    dy: 3
  }

  const paddle = {
    x: (CANVAS_WIDTH / 2) - (PADDLE_WIDTH / 2), 
    y: CANVAS_HEIGHT - 20, 
    w: PADDLE_WIDTH,
    h: PADDLE_HEIGHT,
    dx: 5,
  }


  // FUNCIONES
  function drawBall() {
    ctx.beginPath()
    ctx.arc(ball.x, ball.y, ball.r, 0, 2 * Math.PI)
    ctx.fillStyle = "#fff"
    ctx.fill()
    ctx.closePath()
  }

  function clearCanvas() {
    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)
  }

  function moveBall() {
    ball.x -= ball.dx
    ball.y += ball.dy
  }

  function ballColision() {
    if (ball.x - ball.r <= 0) ball.dx = -ball.dx
    if (ball.x + ball.r >= CANVAS_WIDTH) ball.dx = -ball.dx
    if (ball.y - ball.r <= 0) ball.dy = -ball.dy
    if (ball.y + ball.r >= CANVAS_HEIGHT) {
      ball.x = CANVAS_WIDTH / 2
      ball.y = CANVAS_HEIGHT / 2
    }

    if ((ball.y + ball.r > paddle.y) && 
        ((ball.x - ball.r >= paddle.x) && (ball.x + ball.r <= paddle.x + paddle.w))
    ) { 
      ball.dy = -ball.dy
    }
  }

  function drawPaddle() {
    //ctx.fillRect(paddle.x, paddle.y, paddle.w, paddle.h)
    ctx.drawImage(
        sprite, 
        29, 
        174, 
        PADDLE_WIDTH, 
        PADDLE_HEIGHT, 
        paddle.x, 
        paddle.y, 
        PADDLE_WIDTH,
        PADDLE_HEIGHT
      )
  }

  function randomColor() {
    const colors = {
      0: "pink",
      1: "blue",
      2: "red",
      3: "yellow",
      4: "lime",
      5: "orange"
    }

    return colors[Math.floor(Math.random() * 5)]

  }

  function drawBricks() {
    for (let i = 0; i < BRICK_COL; i++) {
      for (let j = 0; j < BRICK_ROW; j++) {
        const brick = bricks[i][j]

        if (brick.break) continue

        ctx.fillStyle = brick.color
        ctx.fillRect(brick.x, brick.y, BRICK_WIDTH, BRICK_HEIGHT)

      }
    }
  }

  function initEvents() {
    document.addEventListener("keydown", (e) => {
      let key = e.key

      if (key == "ArrowLeft") {
        moveLeft = true
      } else if (key == "ArrowRight") {
        moveRight = true
      }

    })

    document.addEventListener("keyup", (e) => {
      let key = e.key

      if (key == "ArrowLeft") {
        moveLeft = false
      } else if (key == "ArrowRight") {
        moveRight = false
      }

    })
  }

  function bricksColison() {
    for (let i = 0; i < BRICK_COL; i++) {
      for (let j = 0; j < BRICK_ROW; j++) {
        const brick = bricks[i][j]

        if (brick.break) continue

        if (ball.y - ball.r <= brick.y + BRICK_HEIGHT  && 
          (ball.x + ball.r >= brick.x && ball.x - ball.r <= brick.x + BRICK_WIDTH)
        ) {
          ball.dy = -ball.dy
          brick.break = true
        }

        if (ball.y + ball.r == brick.y && 
          (ball.x + ball.r >= brick.x && ball.x - ball.r <= brick.x + BRICK_WIDTH)
        ) 
        {
        ball.dy = -ball.dy
        brick.break = true
      }

      }
    }
  }

  function movePaddle() {
    if (moveRight && paddle.x + paddle.w <= CANVAS_WIDTH) paddle.x += paddle.dx 
    if (moveLeft && paddle.x >= 0) paddle.x -= paddle.dx 
  }

  function draw() {
    clearCanvas()
    drawBall()
    drawPaddle()
    drawBricks()
    
    moveBall()
    ballColision()
    bricksColison()
    movePaddle()
    
    window.requestAnimationFrame(draw)
  }

  initEvents()
  draw()
</script>
